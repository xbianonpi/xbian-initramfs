#!/bin/bash

exec 2>/dev/null

if [ $1 == "configure" ]; then

	[ -e /etc/default/xbian-initramfs.preinst ] && mv /etc/default/xbian-initramfs.preinst /etc/default/xbian-initramfs
	PARMS=$(sed 's/^[ \t]*//;/^#/d;/^$/d;s/=.*//' /var/tmp/xbian-initramfs)
	if [ -e /etc/default/xbian-initramfs ]; then
		for PARM in $PARMS; do
			if grep -q ^$PARM= /etc/default/xbian-initramfs; then
				p=$(grep ^"$PARM=" /etc/default/xbian-initramfs)
				sed -i "s%^$PARM=.*%$p%g" /var/tmp/xbian-initramfs
			fi
		done
	fi
	mv /var/tmp/xbian-initramfs /etc/default/

	dpkg-trigger --no-await trigger-xbian-update-initramfs

	date > /home/xbian/xbian-initramfs-update.log

	echo "Disabling system initramfs-update process" >> /home/xbian/xbian-initramfs-update.log
	if [ $(grep -c "update_initramfs=no" /etc/initramfs-tools/update-initramfs.conf) -eq '1' ]
	then
		echo "Already disabled" >> /home/xbian/xbian-initramfs-update.log
	else
		sed -i 's/update_initramfs=yes/update_initramfs=no/' /etc/initramfs-tools/update-initramfs.conf
		if [ $(grep -c "update_initramfs=no" /etc/initramfs-tools/update-initramfs.conf) -eq '1' ]
		then
			echo "Disabled successfully" >> /home/xbian/xbian-initramfs-update.log
		else
			echo "ERROR disabling system initramfs-update process" >> /home/xbian/xbian-initramfs-update.log
		fi
	fi

        touch /var/run/reboot-required

        # echo "---UPDATE LOG---"
        # cat "/home/xbian/xbian-initramfs-update.log"

        insserv -fr /etc/init.d/triggerhappy &>/dev/null

exec 2>&1

elif [ $1 == "triggered" ]; then

#        { mountpoint -q /boot && [ "$(findmnt -o source -n /boot)" = '/dev/mmcblk0p1' ]; } || { umount /boot >/dev/null 2>&1; mount -t vfat /dev/mmcblk0p1 /boot || { echo "CAN'T MOUNT BOOT"; exit 1; }; }
        mountpoint -q /boot || mount /boot || exit 1

        /etc/xbian-initramfs/update-initramfs.sh &>/dev/null

        case $(xbian-arch) in 
            RPI)
                if grep -q "initramfs initramfs.gz" /boot/config.txt; then
                    sed  -i "s/initramfs.gz[\t ]*0x10/initramfs.gz  0x15/g" /boot/config.txt
                else
                    cat /boot/config.txt | grep -v initramfs > /boot/config.txt.new
                    echo "initramfs initramfs.gz  0x1500000" > /boot/config.txt
                    cat /boot/config.txt.new >> /boot/config.txt
                    rm /boot/config.txt.new
                fi

                if [ -e /etc/xbian_version ] || grep -q 'rootfstype=btrfs' /boot/cmdline.txt; then
                    :
                else
                    echo " SETTING rootfstype=btrfs in cmdline.txt. This will start filesystem conversion during next reboot. As soon as DPKG and APT processes terminate, reboot your RPI "
                    sed -i 's/rootfstype=[a-zA-Z0-9]*/rootfstype=btrfs/' /boot/cmdline.txt
                fi
                ;;
            *)
                ;;
        esac

fi

exit 0
